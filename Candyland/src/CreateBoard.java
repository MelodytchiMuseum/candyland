import java.util.ArrayList;

//This class is specifically used to create all the tiles, keeping the Board class a little cleaner
//because this is a really long process. It reuses Board's tileList so we don't need any
//unnecessary methods.
public class CreateBoard {
	//Constructor.
	public CreateBoard(ArrayList<Tile> tileList) {
		//Creating all the tiles.
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 174, 634));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 205, 633));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 234, 622));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 253, 595));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 269, 569));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 293, 545));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 326, 531));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 360, 530));
		tileList.add(new Tile(TileColors.Pink, TileAreas.Gingerbread, false, 392, 536));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 422, 546));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 451, 567));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 477, 594));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 500, 615));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 529, 632));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 564, 643));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 597, 647));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 630, 646));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 664, 639));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 693, 624));
		tileList.add(new Tile(TileColors.Pink, TileAreas.Mint, false, 703, 594));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 689, 567));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 658, 556));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 623, 556));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 588, 555));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 554, 554));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 518, 550));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 486, 539));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 465, 512));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 461, 478));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 485, 456));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 523, 456));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 556, 466));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 586, 485));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 613, 499));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 647, 514));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 682, 521));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 715, 518));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 742, 503));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 762, 473));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 762, 438));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 752, 409));
		tileList.add(new Tile(TileColors.Pink, TileAreas.Gumdrop, false, 721, 390));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 688, 392));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 657, 407));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 623, 417));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, true, 587, 413));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 553, 398));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 526, 379));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 496, 359));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 463, 345));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 433, 342));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 395, 348));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 359, 356));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 331, 376));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 305, 400));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 285, 429));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 263, 457));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 245, 480));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 216, 494));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 186, 507));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 153, 508));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 118, 503));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 87, 493));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 63, 474));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 48, 445));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 48, 409));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 61, 384));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 94, 371));
		tileList.add(new Tile(TileColors.Pink, TileAreas.Nutt, false, 127, 374));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 155, 383));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 190, 394));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 224, 397));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 251, 385));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 259, 353));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 234, 323));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 206, 310));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 189, 286));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 186, 250));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 212, 224));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 242, 217));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 277, 221));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 308, 229));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 342, 248));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 374, 258));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 405, 277));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, true, 436, 291));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 466, 304));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 500, 313));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 540, 325));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 572, 329));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 610, 335));
		tileList.add(new Tile(TileColors.Pink, TileAreas.Lollipop, false, 644, 338));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 677, 334));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 715, 328));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 741, 315));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 763, 289));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 771, 252));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 761, 223));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 731, 199));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 708, 181));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 696, 145));
		tileList.add(new Tile(TileColors.Pink, TileAreas.Frostine, false, 676, 114));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 650, 105));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 614, 112));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 589, 137));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 578, 166));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 559, 196));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 536, 227));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 507, 246));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 475, 253));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 439, 244));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 407, 226));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 381, 206));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 348, 189));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 319, 180));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 285, 176));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, true, 246, 176));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 214, 180));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 182, 188));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 144, 187));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 119, 179));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 93, 163));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 75, 132));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 71, 103));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 84, 68));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 105, 48));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 139, 34));
		tileList.add(new Tile(TileColors.Purple, TileAreas.Standard, false, 172, 34));
		tileList.add(new Tile(TileColors.Yellow, TileAreas.Standard, false, 203, 40));
		tileList.add(new Tile(TileColors.Blue, TileAreas.Standard, false, 232, 58));
		tileList.add(new Tile(TileColors.Gold, TileAreas.Standard, false, 259, 78));
		tileList.add(new Tile(TileColors.Green, TileAreas.Standard, false, 286, 96));
		tileList.add(new Tile(TileColors.Orange, TileAreas.Standard, false, 315, 111));
		tileList.add(new Tile(TileColors.Rainbow, TileAreas.Castle, false, 350, 124));
		
		//Setting shortcuts.
		tileList.get(4).changeShortcut(tileList.get(58));
		tileList.get(34).changeShortcut(tileList.get(44));
	}
}